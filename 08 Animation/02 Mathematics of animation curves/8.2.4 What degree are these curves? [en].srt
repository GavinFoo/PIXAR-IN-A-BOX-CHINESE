1
00:00:00,000 --> 00:00:02,951
PIXAR IN A BOX 艾墨镇 aimozhen.com/pixarinabox

2
00:00:02,951 --> 00:00:04,724
- Now that we've seen how Bézier curves

3
00:00:04,724 --> 00:00:07,641
behave geometrically, let's take a look at the algebra

4
00:00:07,641 --> 00:00:09,812
starting with a three-point polygon.

5
00:00:09,812 --> 00:00:12,436
As before, we construct a point Q

6
00:00:12,436 --> 00:00:14,224
using linear interpolation,

7
00:00:14,224 --> 00:00:17,890
that is a weighted average on the line segment AB.

8
00:00:17,890 --> 00:00:20,563
Algebraically, Q can be written as

9
00:00:20,563 --> 00:00:25,683
Q = (1-t)A + tB

10
00:00:25,683 --> 00:00:28,980
Next we construct a point R on the line segment BC,

11
00:00:28,980 --> 00:00:30,582
which means that R can be written as

12
00:00:30,582 --> 00:00:35,668
R = (1-t)B + tC

13
00:00:35,668 --> 00:00:37,247
Finally we connect Q and R,

14
00:00:37,247 --> 00:00:39,034
and do one final linear interpolation

15
00:00:39,034 --> 00:00:41,166
to get P, out point on the curve.

16
00:00:41,166 --> 00:00:45,381
P = (1-t)Q + tR

17
00:00:45,381 --> 00:00:46,797
From this last equation,

18
00:00:46,797 --> 00:00:50,353
it kinda look like P is degree 1 in t.

19
00:00:50,353 --> 00:00:52,896
But the first two equations also depend on t.

20
00:00:52,896 --> 00:00:55,938
So let's substitute the first two equations into the third

21
00:00:55,938 --> 00:00:58,934
to get this combined expression.

22
00:00:58,934 --> 00:01:00,763
Multiplying out the terms and collecting,

23
00:01:00,763 --> 00:01:02,772
I can rewrite P as

24
00:01:02,772 --> 00:01:07,291
P = (1-t)2*A + 2t(1-t)B +t2*C.

25
00:01:13,291 --> 00:01:15,125
All those squared terms show us

26
00:01:15,125 --> 00:01:18,194
that P is actually a degree 2 polynomial.

27
00:01:18,194 --> 00:01:20,796
Interesting, a three-point polygon

28
00:01:20,796 --> 00:01:23,547
leads to a degree 2 polynomial.

29
00:01:23,547 --> 00:01:25,753
Thar kinda makes sense because we did two stages

30
00:01:25,753 --> 00:01:27,425
of linear interpolation.

31
00:01:27,425 --> 00:01:29,550
In the first stage we computed Q and R

32
00:01:29,550 --> 00:01:32,010
and in the second stage we computed P.

33
00:01:32,010 --> 00:01:33,973
Now, what happens to the degree

34
00:01:33,973 --> 00:01:36,690
if we start with a four-point polygon?

35
00:01:36,690 --> 00:01:39,476
Can you guess?

36
00:01:39,476 --> 00:01:41,566
In the first stage, I compute three points

37
00:01:41,566 --> 00:01:43,273
using linear interpolation.

38
00:01:43,273 --> 00:01:45,525
In the second stage, I compute two points,

39
00:01:45,525 --> 00:01:47,950
and in the third stage, I compute one point.

40
00:01:47,950 --> 00:01:49,995
Since I have three stages,

41
00:01:49,995 --> 00:01:52,456
the resulting curve will be degree 3.

42
00:01:52,456 --> 00:01:57,456
That means a four-point polygon results in a degree 3 curve.

43
00:01:57,456 --> 00:01:59,630
You can generalize deCastlejau's algorithm

44
00:01:59,630 --> 00:02:04,877
to start with five, six, or any number of points.

45
00:02:04,877 --> 00:02:07,176
The rule is, if we start with n points,

46
00:02:07,176 --> 00:02:09,962
you get a polynomial of degree n-1.

47
00:02:09,962 --> 00:02:12,324
Pretty neat.

48
00:02:12,324 --> 00:02:14,726
And congratulations on finishing this lesson.

49
00:02:14,726 --> 00:02:16,479
If you're feeling particularly bold,

50
00:02:16,479 --> 00:02:20,000
try your hand at the following bonus challenge. aimozhen.com/pixarinabox

