1
00:00:00,000 --> 00:00:00,000
PIXAR IN A BOX 艾墨镇 aimozhen.com/pixarinabox

2
00:00:00,000 --> 00:00:05,009
嗨 我的名字是 Susan Fong 我是一个皮克斯动画工作室的渲染技术总监

3
00:00:05,009 --> 00:00:09,200
我的工作是确保你在影院里看到的图像尽可能快速和高效地被创造出来

4
00:00:09,200 --> 00:00:13,048
我的工作是确保你在影院里看到的图像尽可能快速和高效地被创造出来

5
00:00:13,048 --> 00:00:15,830
 Christophe 在之前的视频说过 这是一个庞大的工作

6
00:00:15,830 --> 00:00:20,100
渲染是一个极其复杂的过程

7
00:00:20,100 --> 00:00:24,160
需要成千上万台电脑一起工作来渲染我们的电影

8
00:00:24,160 --> 00:00:28,269
渲染农场是我们安置所有这些计算机的地方 但是这些计算机到底在做什么呢？

9
00:00:28,269 --> 00:00:32,180
这就是本课程的主题 在第一部分 我们将要在一个渲染作品中呈现一个几何外观

10
00:00:32,180 --> 00:00:37,260
在课程的第二部分 我们将讨论编写计算机程序所需的一些方程和代数

11
00:00:37,260 --> 00:00:41,350
在课程的第二部分 我们将讨论编写计算机渲染程序所需的一些方程和代数

12
00:00:41,350 --> 00:00:47,730
那让我们开始吧！让我们从最简单的场景开始

13
00:00:47,730 --> 00:00:54,039
这个物体在三维空间中 正如我们所见我们在环视它

14
00:00:54,039 --> 00:00:58,699
就像真人电影一样 我们需要在场景中放置一个摄影机

15
00:00:58,699 --> 00:01:03,520
在计算机图形学中 我们称之为虚拟摄影机 首先为我们的虚拟摄影机选择一个位置

16
00:01:03,520 --> 00:01:08,709
它将被用来创建图像 它在这儿显示为一个白点

17
00:01:08,709 --> 00:01:15,170
我们还需要决定我们的摄像机指向哪个方向 这用红色的线表示

18
00:01:15,170 --> 00:01:20,420
下一步 我们建立一个用来构成图像的平面 它被称作图像平面

19
00:01:20,420 --> 00:01:25,509
代表虚拟摄影机将看到什么 注意它是垂直于观察方向的

20
00:01:25,509 --> 00:01:31,409
图像平面被分解成一个像素网格 将构成图像

21
00:01:31,409 --> 00:01:36,709
在这个交互练习中 前两个滑块允许你在场景中旋转摄像机

22
00:01:36,709 --> 00:01:40,630
在这个交互练习中 前两个滑块允许你在场景中旋转摄像机

23
00:01:40,630 --> 00:01:44,630
渲染器的工作听起来简单 它必须确定每个像素的颜色

24
00:01:44,630 --> 00:01:49,319
这就像一种以数字图像平面作为画布的渲染绘画

25
00:01:49,319 --> 00:01:54,119
现在我只在这个例子中现实较少的像素

26
00:01:54,119 --> 00:01:58,319
多年来 我们已经开发了一些不同的渲染算法

27
00:01:58,319 --> 00:02:05,640
多年来 我们已经开发了一些不同的渲染算法

28
00:02:05,640 --> 00:02:10,530
其中最优雅而且功能最强大的算法要数光线追踪

29
00:02:10,530 --> 00:02:17,539
这里是它的工作原理：确定一个颜色，表示为这个像素

30
00:02:17,539 --> 00:02:22,289
光线跟踪器从摄影机开始构造一个数学射线 穿过像素的中心

31
00:02:22,289 --> 00:02:26,989
然后延伸至场景 有点像用激光束指着像素但现在是用摄像机

32
00:02:26,989 --> 00:02:31,019
光线跟踪计算场景对象和这条射线之间最接近的交点

33
00:02:31,019 --> 00:02:36,199
光线跟踪计算场景对象和这条射线之间最接近的交点

34
00:02:36,199 --> 00:02:41,049
然后确定相交的物体在这一点上的颜色 接着将颜色渲染在该像素上

35
00:02:41,049 --> 00:02:49,479
所以这个像素是棕色的 这个是黄色的 还有等等其他像素

36
00:02:49,479 --> 00:02:54,910
图像中的所有像素都将完成这个过程

37
00:02:54,910 --> 00:02:59,419
更高级版本的光线跟踪可以创建更微妙的效果

38
00:02:59,419 --> 00:03:04,199
诸如柔和阴影和光线的变化 以此有助于表达不同的气氛

39
00:03:04,199 --> 00:03:08,690
光线追踪的过程引出了一堆其他问题 如交点是如何确定的？

40
00:03:08,690 --> 00:03:12,639
确定交点之后 又如何确定该交点的颜色？

41
00:03:12,639 --> 00:03:17,889
这些秘密和其他更多的知识将在剩下的教程中被揭示

42
00:03:17,889 --> 00:03:21,000
在第一个练习中 你可以自己练习一些光线跟踪渲染aimozhen.com/pixarinabox

