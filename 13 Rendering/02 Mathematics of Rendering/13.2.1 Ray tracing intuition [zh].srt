1
00:00:00,000 --> 00:00:00,000
PIXAR IN A BOX 艾墨镇 aimozhen.com/pixarinabox

2
00:00:00,767 --> 00:00:02,758
（过门）

3
00:00:03,758 --> 00:00:05,162
从前面的课程中我们了解到

4
00:00:05,162 --> 00:00:06,373
要写一个光线追踪渲染器

5
00:00:06,373 --> 00:00:07,649
你需要一个数学手段

6
00:00:07,649 --> 00:00:09,535
来回答一系列问题

7
00:00:09,535 --> 00:00:12,869
射线在何处与场景物体相交？

8
00:00:12,869 --> 00:00:15,435
一束阴影射线在与另一个物体相交前

9
00:00:15,435 --> 00:00:17,924
是否就已经到达了光源？

10
00:00:17,924 --> 00:00:20,195
物体的面时如何反射光的？

11
00:00:22,195 --> 00:00:24,408
光源距离多远？

12
00:00:24,408 --> 00:00:28,809
最后是 摄像机在什么位置？

13
00:00:28,809 --> 00:00:30,361
在余下的课程中

14
00:00:30,361 --> 00:00:32,500
我们将集火第一个小问题

15
00:00:32,500 --> 00:00:35,770
也就是射线-物体相交

16
00:00:35,770 --> 00:00:37,073
我们将从一个简化的问题

17
00:00:37,073 --> 00:00:38,917
开始我们的学习

18
00:00:38,917 --> 00:00:41,110
在二维中 射线-物体相交

19
00:00:41,110 --> 00:00:42,561
该如何实现

20
00:00:42,561 --> 00:00:46,020
光线追踪在二维中看起来是什么样的？

21
00:00:46,020 --> 00:00:48,489
让我们先从我们的三维情况入手

22
00:00:48,489 --> 00:00:50,956
取这个包含了

23
00:00:50,956 --> 00:00:54,581
相机和视向的截面

24
00:00:54,581 --> 00:00:56,043
同样也注意到白色平面

25
00:00:56,043 --> 00:00:58,058
和像平面交于一条线

26
00:00:58,058 --> 00:01:00,569
这条线将被称为相直线

27
00:01:00,569 --> 00:01:02,635
这意味着如果我们仅画出落在白色平面上的东西

28
00:01:02,635 --> 00:01:05,391
我们就会得到如下的图片

29
00:01:05,391 --> 00:01:07,257
为了更加简化这个问题

30
00:01:07,257 --> 00:01:08,684
我们将尝试首先和最简单

31
00:01:08,684 --> 00:01:10,366
的物体最相交

32
00:01:10,366 --> 00:01:12,242
一条线段

33
00:01:12,242 --> 00:01:14,037
这就是我们的场景

34
00:01:14,037 --> 00:01:17,851
仅有一条线段连接着两个点 A 和 B

35
00:01:17,851 --> 00:01:19,203
如果要渲染这个场景

36
00:01:19,203 --> 00:01:21,116
如同三维场景一样

37
00:01:21,116 --> 00:01:23,857
我们需要为我们的摄像机找一个落点

38
00:01:23,857 --> 00:01:26,887
称摄像机点为 C

39
00:01:26,887 --> 00:01:32,162
下一步 我们找一个视向 这里用红色表示

40
00:01:32,162 --> 00:01:33,355
在三维中

41
00:01:33,355 --> 00:01:35,018
相机位置和视向

42
00:01:35,018 --> 00:01:37,401
定义了相平面

43
00:01:37,401 --> 00:01:41,578
但在二维中 它仅给出了一条像直线

44
00:01:41,578 --> 00:01:45,675
这条线就是我们的像将产生的地方

45
00:01:45,675 --> 00:01:48,727
现在让我们在像直线上选择一个点 P

46
00:01:48,727 --> 00:01:52,312
来代表我们想确定其颜色的像素

47
00:01:52,312 --> 00:01:57,327
回忆起光线追踪会建立一条从 C 穿过 P

48
00:01:57,327 --> 00:01:59,531
直达场景的射线

49
00:01:59,531 --> 00:02:03,363
我们需要一个数学的方法来计算交点

50
00:02:03,363 --> 00:02:06,383
比如这个 称为 I

51
00:02:06,383 --> 00:02:08,050
为了展开数学运算

52
00:02:08,050 --> 00:02:10,547
我们先建立一个坐标系统

53
00:02:11,547 --> 00:02:14,119
我们所需要的数学来自于

54
00:02:14,119 --> 00:02:17,675
计算射线和线段相交的代数方法

55
00:02:17,675 --> 00:02:19,712
我们在这个视频里介绍了不少想法

56
00:02:19,712 --> 00:02:21,031
所以 用下一个练习

57
00:02:21,031 --> 00:02:22,259
让你对二维光线追踪

58
00:02:22,259 --> 00:02:23,000
更熟悉一点吧 aimozhen.com/pixarinabox

