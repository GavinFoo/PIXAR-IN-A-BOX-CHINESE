1
00:00:00,000 --> 00:00:00,000
PIXAR IN A BOX 艾墨镇 aimozhen.com/pixarinabox

2
00:00:00,120 --> 00:00:02,800
灯亮

3
00:00:02,800 --> 00:00:05,031
- 好样的 能够进行到目前的程度

4
00:00:05,031 --> 00:00:06,957
现在是你自己来掌控它的时候了

5
00:00:06,957 --> 00:00:10,246
到目前为止 我们已经建立了一个二维弹簧质点系统

6
00:00:10,246 --> 00:00:12,457
非常酷

7
00:00:12,457 --> 00:00:14,862
这是许多模拟中关键的基本构件  

8
00:00:14,862 --> 00:00:17,236
回想在第一课 我们用许多连接在一起的弹簧

9
00:00:17,236 --> 00:00:19,625
像这样 来模仿头发

10
00:00:19,625 --> 00:00:21,415
在这个视频里 我将为你展示

11
00:00:21,415 --> 00:00:24,141
如何添加第二个弹簧 并将它加入你的系统中

12
00:00:24,141 --> 00:00:26,525
首先 我们来画一个新的受力图

13
00:00:26,525 --> 00:00:28,269
来看看会发生什么

14
00:00:28,269 --> 00:00:31,090
让我们将两个粒子命名为粒子1和粒子2

15
00:00:31,090 --> 00:00:34,574
并将两个弹簧命名为弹簧1和弹簧2

16
00:00:34,574 --> 00:00:37,391
首先我们来想想施加在粒子1上的新的作用力

17
00:00:37,391 --> 00:00:40,178
像之前那样

18
00:00:40,178 --> 00:00:42,368
我们有一个向下的重力

19
00:00:42,368 --> 00:00:45,584
一个向锚点牵引的弹簧1的拉力

20
00:00:45,584 --> 00:00:48,638
和一个向反方向作用的阻尼力

21
00:00:48,638 --> 00:00:50,912
然而 由于新的弹簧连接了粒子2

22
00:00:50,912 --> 00:00:53,435
如今多了一个新的力

23
00:00:53,435 --> 00:00:55,532
在这种情况下 我们用来计算弹簧力的位移量就是两个粒子之间的差值

24
00:00:55,532 --> 00:00:57,642
在这种情况下 我们用来计算弹簧力的位移量就是两个粒子之间的差值

25
00:00:57,642 --> 00:01:02,411
粒子2的坐标－粒子1的坐标

26
00:01:02,411 --> 00:01:05,063
这里也有一个用来抵抗弹簧2弹力的阻尼力

27
00:01:05,063 --> 00:01:07,498
这里也有一个用来抵抗弹簧2弹力的阻尼力

28
00:01:07,498 --> 00:01:10,509
所以 我们需要将这两个作用在 X 轴和 Y 轴方向上的新的力

29
00:01:10,509 --> 00:01:13,766
添加到粒子1的净力计算中

30
00:01:13,766 --> 00:01:16,778
现在来考虑一下我们新添加的粒子

31
00:01:16,778 --> 00:01:19,261
它有重力 同时还有弹簧2的弹力减去弹簧2在反方向的阻尼力

32
00:01:19,261 --> 00:01:21,640
它有重力 同时还有弹簧2的弹力减去弹簧2在反方向的阻尼力

33
00:01:21,640 --> 00:01:24,657
它有重力 同时还有弹簧2的弹力减去弹簧2在反方向的阻尼力

34
00:01:24,657 --> 00:01:27,519
这就是我们需要在力的计算中修改的了

35
00:01:27,519 --> 00:01:29,849
在顶部 我们需要一些新的初始变量

36
00:01:29,849 --> 00:01:33,058
来表示粒子2的坐标和速度

37
00:01:33,058 --> 00:01:35,687
我将设置粒子2的初始坐标

38
00:01:35,687 --> 00:01:37,797
使它的位置低于粒子1

39
00:01:37,797 --> 00:01:41,290
粒子2的初始速度也是0

40
00:01:41,290 --> 00:01:44,397
为添加新的粒子2

41
00:01:44,397 --> 00:01:47,438
我们需要将粒子1使用的所有方程叠加

42
00:01:47,438 --> 00:01:50,067
然而 有两个关键的差异

43
00:01:50,067 --> 00:01:53,093
在粒子2的弹簧力计算中

44
00:01:53,093 --> 00:01:56,658
我们将使用粒子2的坐标减去粒子1的坐标来表示位移量

45
00:01:56,658 --> 00:01:58,232
我们将使用粒子2的坐标减去粒子1的坐标来表示位移量

46
00:01:58,232 --> 00:02:01,528
且在粒子2的净力计算中

47
00:02:01,528 --> 00:02:05,180
我们用粒子2弹簧弹力减去粒子2阻尼力

48
00:02:07,180 --> 00:02:09,895
最后 我们只需要为这个粒子和弹簧

49
00:02:09,895 --> 00:02:12,549
画出新的圆圈和线条

50
00:02:12,549 --> 00:02:15,614
新的线条将从粒子1延伸到粒子2

51
00:02:15,614 --> 00:02:18,756
新的圆圈将以粒子2的坐标为中心

52
00:02:18,756 --> 00:02:20,782
这就给了我们这样的效果

53
00:02:21,782 --> 00:02:24,253
弹簧质点系统非常强大

54
00:02:24,253 --> 00:02:26,700
在皮克斯 我们不只用它们来制作头发

55
00:02:26,700 --> 00:02:28,752
《恐龙当家》里的树也是用弹簧质点系统来模拟的

56
00:02:28,752 --> 00:02:31,021
《恐龙当家》里的树也是用弹簧质点系统来模拟的

57
00:02:31,021 --> 00:02:32,878
与处理头发有些相似 但它必须去表现树的质感

58
00:02:32,878 --> 00:02:34,936
与处理头发有些相似 但它必须去表现树的质感

59
00:02:34,936 --> 00:02:37,351
树有分支 所以我们用多个彼此相连的线段来模拟它们

60
00:02:37,351 --> 00:02:40,410
树有分支 所以我们用多个彼此相连的线段来模拟它们

61
00:02:40,410 --> 00:02:43,151
有点像用头发连接头发

62
00:02:43,151 --> 00:02:45,774
而不是仅仅连接到头皮上

63
00:02:45,774 --> 00:02:48,750
甚至衣服也是用粒子和弹簧模拟出来的

64
00:02:48,750 --> 00:02:51,670
在《勇敢传说》中 我们需要模拟出梅莉达的几件衣服

65
00:02:51,670 --> 00:02:55,666
每件衣服都有自己的弹簧值

66
00:02:55,666 --> 00:02:57,974
这些值被选择来模仿不同种类的衣服

67
00:02:57,974 --> 00:03:01,645
如羊毛、棉、绸缎

68
00:03:01,645 --> 00:03:04,791
如你所见 弹簧质点系统对于修改和模拟各种不同的东西

69
00:03:04,791 --> 00:03:07,913
都是非常有用的

70
00:03:07,913 --> 00:03:09,912
看看你是否能想到其他可以通过弹簧质点系统创造的材料

71
00:03:09,912 --> 00:03:12,705
看看你是否能想到其他可以通过弹簧质点系统创造的材料

72
00:03:12,705 --> 00:03:14,859
这就是这最后课题的目标

73
00:03:14,859 --> 00:03:16,587
你的任务是通过修改这个程序

74
00:03:16,587 --> 00:03:18,437
来创造任何你想象出的东西

75
00:03:18,437 --> 00:03:20,670
你分拆出的程序会自动显示在在下面的分拆标签里

76
00:03:20,670 --> 00:03:22,704
你分拆出的程序会自动显示在在下面的分拆标签里

77
00:03:22,704 --> 00:03:24,834
和其他人的一起

78
00:03:24,834 --> 00:03:27,624
我真的鼓励你去看看其他的创作

79
00:03:27,624 --> 00:03:30,036
以获得灵感的新想法

80
00:03:30,036 --> 00:03:32,000
玩得高兴，快乐地探索吧 aimozhen.com/pixarinabox

